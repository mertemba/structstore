[project]
name = 'structstore'
description = 'Structured object storage, dynamically typed, to be shared between processes'
requires-python = ">=3.9"
authors = [{ 'name' = 'Max Mertens', 'email' = 'max.mail@dameweb.de' }]
license = { 'file' = 'LICENSE' }
readme = 'README.md'
urls = { 'Homepage' = 'https://github.com/mertemba/structstore' }
dependencies = ['nanobind']
dynamic = ['version']

[build-system]
requires = [
    'py-build-cmake~=0.1.8',
    'nanobind~=2.1.0',
    'nanobind-stubgen~=0.1.5',
]
build-backend = 'py_build_cmake.build'

[tool.py-build-cmake.module]
name = 'structstore'
directory = 'src'

[tool.py-build-cmake.sdist]
include = ['CMakeLists.txt', 'cmake/*', 'src/include/structstore/*.hpp', 'src/*.cpp']
exclude = []

[tool.py-build-cmake.cmake]
minimum_version = '3.10'
build_type = 'Release'
source_path = '.' # Containing CMakeLists.txt
args = ['-Wdev']
find_python = true
build_args = ['-j']
build_tool_args = []
install_args = ['--verbose']
install_components = ['install_modules']
options = { 'BUILD_WITH_PYTHON' = 'ON', 'BUILD_WITH_PY_BUILD_CMAKE' = 'ON' }

[tool.py-build-cmake.linux.cmake] # Linux-specific options
generator = 'Ninja Multi-Config'
config = ['Release']
env = { 'CMAKE_PREFIX_PATH' = '${HOME}/.local' }

[tool.py-build-cmake.mac.cmake] # macOS-specific options
generator = 'Ninja Multi-Config'
config = ['Release']

[tool.py-build-cmake.windows.cmake] # Windows-specific options
config = ['Release']

[tool.py-build-cmake.stubgen]
args = ['-v']

[tool.poetry]
authors = []
description = ''
name = ''
version = '0'

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
py-build-cmake = "^0.1.8"
nanobind = "^2.1.0"
nanobind-stubgen = "^0.1.5"
numpy = "<2"
build = "^1.2.2"
pytest = "^8.3.3"
